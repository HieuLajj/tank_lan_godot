[gd_scene load_steps=28 format=2]

[ext_resource path="res://Font-chu-dep/Font-chu-dep/BreeSerif.otf" type="DynamicFontData" id=1]
[ext_resource path="res://mapPack/Square.png" type="Texture" id=2]
[ext_resource path="res://mapPack/Consumable Item Free/weapon box.png" type="Texture" id=3]
[ext_resource path="res://icon.png" type="Texture" id=4]
[ext_resource path="res://music/win2.wav" type="AudioStream" id=5]
[ext_resource path="res://minigame/minigame1/Cameramapcuoi.gd" type="Script" id=6]
[ext_resource path="res://minigame/minigame1/Game_UI2.gd" type="Script" id=7]
[ext_resource path="res://bando/Winner.gd" type="Script" id=8]
[ext_resource path="res://Script/UI.gd" type="Script" id=9]
[ext_resource path="res://minigame/minigame3/pacmanninja.tscn" type="PackedScene" id=10]
[ext_resource path="res://minigame/minigame4/rock.tscn" type="PackedScene" id=11]
[ext_resource path="res://minigame/minigame3/pacmanangle.tscn" type="PackedScene" id=12]
[ext_resource path="res://minigame/minigame3/pacmanchoang.tscn" type="PackedScene" id=13]
[ext_resource path="res://bando/thembomb.tscn" type="PackedScene" id=14]
[ext_resource path="res://minigame/minigame3/dinhbay.tscn" type="PackedScene" id=15]
[ext_resource path="res://mapPack/Interiors_free/48x48/Room_Builder_free_48x48.png" type="Texture" id=16]
[ext_resource path="res://minigame/minigame3/maze.gd" type="Script" id=17]

[sub_resource type="Shader" id=10]
code = "shader_type canvas_item;

uniform float Strength : hint_range(0,20) = 3;
uniform float RandomOffset = 1f;

float random( float seed )
{
	return fract( 543.2543 * sin( dot( vec2( seed, seed ), vec2( 3525.46 + RandomOffset, -54.3415 ) ) ) );
}

void vertex()
{
	vec2 VERTEX_OFFSET = VERTEX;
	VERTEX_OFFSET.x += (
		random(
			( trunc( VERTEX_OFFSET.y))
		+	TIME
		) - 0.5
	) * Strength ;

	VERTEX_OFFSET.y += (
		random(
			( trunc( VERTEX_OFFSET.x))
		+	TIME
		) - 0.5
	) * Strength;
	
	VERTEX = VERTEX_OFFSET;	
}"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )
shader_param/Strength = 3.0
shader_param/RandomOffset = 1.0

[sub_resource type="DynamicFont" id=1]
size = 39
outline_size = 4
outline_color = Color( 0.0196078, 0.0196078, 0.0196078, 1 )
font_data = ExtResource( 1 )

[sub_resource type="Shader" id=3]
code = "// Fireworks shader
// Based on shadertoy shader by Martijn Steinrucken aka BigWings - 2015 
// (https://www.shadertoy.com/view/lscGRl)

shader_type canvas_item;

uniform float PI = 3.141592653589793238;
uniform float TWOPI = 6.283185307179586 ;
uniform float NUM_EXPLOSIONS = 8.0;
uniform float NUM_PARTICLES = 70.0;

// Noise functions by Dave Hoskins

uniform vec3 MOD3 = vec3(0.1031,0.11369,0.13787);

vec3 hash31(float p) {
   vec3 p3 = fract(vec3(p) * MOD3);
   p3 += dot(p3, p3.yzx + 19.19);
   return fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));
}

float hash12(vec2 p) // attention changement vec2 p en vec3
{
                vec3 p3  = fract(vec3(p.xy, 0.0) * MOD3);
    p3 += dot(p3, p3.yzx + 19.19);
    return fract((p3.x + p3.y) * p3.z);
}

float circ(vec2 uv, vec2 pos, float size) {
                uv -= pos;
    
    size *= size;
    return smoothstep(size*1.1, size, dot(uv, uv));
}

float lighter(vec2 uv, vec2 pos, float size) {
    uv -= pos;
    size *= size;
    return size/dot(uv, uv);
}

vec3 explosion(vec2 uv, vec2 p, float seed, float t) {
                
    vec3 col = vec3(0.);
    
    vec3 en = hash31(seed);
    vec3 baseCol = en;
    for(float i=0.; i<NUM_PARTICLES; i++) {
               vec3 n = hash31(i)-.5;
       
                               vec2 startP = p-vec2(0., t*t*.1);        
        vec2 endP = startP+normalize(n.xy)*n.z;
        
        
        float pt = 1.-pow(t-1., 2.);
        vec2 pos = mix(p, endP, pt);    
        float size = mix(.01, .005, smoothstep(0., .1, pt));
        size *= smoothstep(1., .1, pt);
        
        float sparkle = (sin((pt+n.z)*100.)*.5+.5);
        sparkle = pow(sparkle, pow(en.x, 3.)*50.)*mix(0.01, .01, en.y*n.y);
		float B = smoothstep(en.x-en.z, en.x+en.z, t)*smoothstep(en.y+en.z, en.y-en.z, t);
        size += sparkle*B;
        
        col += baseCol*lighter(uv, pos, size);
    }
    
    return col;
}


void fragment() {
    vec2 iResolution = vec2(1024,600);
	vec2 uv = FRAGCOORD.xy / iResolution.xy;
                uv.x -= .5;
    uv.x *= iResolution.x/iResolution.y;
    
    float n = hash12(uv+10.0);
    float t = TIME*.5;
    
    vec3 c = vec3(0.);
    
    for(float i=0.; i<NUM_EXPLOSIONS; i++) {
               float et = t+i*1234.45235;
        float id = floor(et);
        et -= id;
        
        vec2 p = hash31(id).xy;
        p.x -= .5;
        p.x *= 1.6;
        c += explosion(uv, p, id, et);
		}
    
	float alpha = 1.0;
//	if (c.x < 0.2){alpha=0.0;} 
    COLOR = vec4(c, alpha);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/PI = 3.14159
shader_param/TWOPI = 6.28319
shader_param/NUM_EXPLOSIONS = 8.0
shader_param/NUM_PARTICLES = 70.0
shader_param/MOD3 = Vector3( 0.1031, 0.11369, 0.13787 )

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 30.5, 31 )

[sub_resource type="ConvexPolygonShape2D" id=7]
points = PoolVector2Array( 0, 0, 48, 0, 48, 48, 0, 48 )

[sub_resource type="TileSet" id=6]
0/name = "Room_Builder_free_48x48.png 0"
0/texture = ExtResource( 16 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 576, 432, 48, 48 )
0/tile_mode = 0
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape = SubResource( 7 )
0/shape_one_way = false
0/shape_one_way_margin = 1.0
0/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 7 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
0/z_index = 0

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;



uniform vec4 WATER_COL : hint_color =  vec4(0.04, 0.38, 0.88, 1.0);

uniform vec4 WATER2_COL : hint_color =  vec4(0.04, 0.35, 0.78, 1.0);

uniform vec4 FOAM_COL : hint_color = vec4(0.8125, 0.9609, 0.9648, 1.0);



uniform float distortion_speed = 2.0;

uniform vec2 tile = vec2(5.0, 5.0);

uniform float wave_speed = 1.5;



const float TWOPI = 6.283185307;

const float SIXPI = 18.84955592;







float circ(vec2 pos, vec2 c, float s)

{

    c = abs(pos - c);

    c = min(c, 1.0 - c);



    return smoothstep(0.0, 0.002, sqrt(s) - sqrt(dot(c, c))) * -1.0;

}





float waterlayer(vec2 uv)

{

    uv = mod(uv, 1.0); // Clamp to [0..1]

    float ret = 1.0;

    ret += circ(uv, vec2(0.37378, 0.277169), 0.0268181);

    ret += circ(uv, vec2(0.0317477, 0.540372), 0.0193742);

    ret += circ(uv, vec2(0.430044, 0.882218), 0.0232337);

    ret += circ(uv, vec2(0.641033, 0.695106), 0.0117864);

    ret += circ(uv, vec2(0.0146398, 0.0791346), 0.0299458);

    ret += circ(uv, vec2(0.43871, 0.394445), 0.0289087);

    ret += circ(uv, vec2(0.909446, 0.878141), 0.028466);

    ret += circ(uv, vec2(0.310149, 0.686637), 0.0128496);

    ret += circ(uv, vec2(0.928617, 0.195986), 0.0152041);

    ret += circ(uv, vec2(0.0438506, 0.868153), 0.0268601);

    ret += circ(uv, vec2(0.308619, 0.194937), 0.00806102);

    ret += circ(uv, vec2(0.349922, 0.449714), 0.00928667);

    ret += circ(uv, vec2(0.0449556, 0.953415), 0.023126);

    ret += circ(uv, vec2(0.117761, 0.503309), 0.0151272);

    ret += circ(uv, vec2(0.563517, 0.244991), 0.0292322);

    ret += circ(uv, vec2(0.566936, 0.954457), 0.00981141);

    ret += circ(uv, vec2(0.0489944, 0.200931), 0.0178746);

    ret += circ(uv, vec2(0.569297, 0.624893), 0.0132408);

    ret += circ(uv, vec2(0.298347, 0.710972), 0.0114426);

    ret += circ(uv, vec2(0.878141, 0.771279), 0.00322719);

    ret += circ(uv, vec2(0.150995, 0.376221), 0.00216157);

    ret += circ(uv, vec2(0.119673, 0.541984), 0.0124621);

    ret += circ(uv, vec2(0.629598, 0.295629), 0.0198736);

    ret += circ(uv, vec2(0.334357, 0.266278), 0.0187145);

    ret += circ(uv, vec2(0.918044, 0.968163), 0.0182928);

    ret += circ(uv, vec2(0.965445, 0.505026), 0.006348);

    ret += circ(uv, vec2(0.514847, 0.865444), 0.00623523);

    ret += circ(uv, vec2(0.710575, 0.0415131), 0.00322689);

    ret += circ(uv, vec2(0.71403, 0.576945), 0.0215641);

    ret += circ(uv, vec2(0.748873, 0.413325), 0.0110795);

    ret += circ(uv, vec2(0.0623365, 0.896713), 0.0236203);

    ret += circ(uv, vec2(0.980482, 0.473849), 0.00573439);

    ret += circ(uv, vec2(0.647463, 0.654349), 0.0188713);

    ret += circ(uv, vec2(0.651406, 0.981297), 0.00710875);

    ret += circ(uv, vec2(0.428928, 0.382426), 0.0298806);

    ret += circ(uv, vec2(0.811545, 0.62568), 0.00265539);

    ret += circ(uv, vec2(0.400787, 0.74162), 0.00486609);

    ret += circ(uv, vec2(0.331283, 0.418536), 0.00598028);

    ret += circ(uv, vec2(0.894762, 0.0657997), 0.00760375);

    ret += circ(uv, vec2(0.525104, 0.572233), 0.0141796);

    ret += circ(uv, vec2(0.431526, 0.911372), 0.0213234);

    ret += circ(uv, vec2(0.658212, 0.910553), 0.000741023);

    ret += circ(uv, vec2(0.514523, 0.243263), 0.0270685);

    ret += circ(uv, vec2(0.0249494, 0.252872), 0.00876653);

    ret += circ(uv, vec2(0.502214, 0.47269), 0.0234534);

    ret += circ(uv, vec2(0.693271, 0.431469), 0.0246533);

    ret += circ(uv, vec2(0.415, 0.884418), 0.0271696);

    ret += circ(uv, vec2(0.149073, 0.41204), 0.00497198);

    ret += circ(uv, vec2(0.533816, 0.897634), 0.00650833);

    ret += circ(uv, vec2(0.0409132, 0.83406), 0.0191398);

    ret += circ(uv, vec2(0.638585, 0.646019), 0.0206129);

    ret += circ(uv, vec2(0.660342, 0.966541), 0.0053511);

    ret += circ(uv, vec2(0.513783, 0.142233), 0.00471653);

    ret += circ(uv, vec2(0.124305, 0.644263), 0.00116724);

    ret += circ(uv, vec2(0.99871, 0.583864), 0.0107329);

    ret += circ(uv, vec2(0.894879, 0.233289), 0.00667092);

    ret += circ(uv, vec2(0.246286, 0.682766), 0.00411623);

    ret += circ(uv, vec2(0.0761895, 0.16327), 0.0145935);

    ret += circ(uv, vec2(0.949386, 0.802936), 0.0100873);

    ret += circ(uv, vec2(0.480122, 0.196554), 0.0110185);

    ret += circ(uv, vec2(0.896854, 0.803707), 0.013969);

    ret += circ(uv, vec2(0.292865, 0.762973), 0.00566413);

    ret += circ(uv, vec2(0.0995585, 0.117457), 0.00869407);

    ret += circ(uv, vec2(0.377713, 0.00335442), 0.0063147);

    ret += circ(uv, vec2(0.506365, 0.531118), 0.0144016);

    ret += circ(uv, vec2(0.408806, 0.894771), 0.0243923);

    ret += circ(uv, vec2(0.143579, 0.85138), 0.00418529);

    ret += circ(uv, vec2(0.0902811, 0.181775), 0.0108896);

    ret += circ(uv, vec2(0.780695, 0.394644), 0.00475475);

    ret += circ(uv, vec2(0.298036, 0.625531), 0.00325285);

    ret += circ(uv, vec2(0.218423, 0.714537), 0.00157212);

    ret += circ(uv, vec2(0.658836, 0.159556), 0.00225897);

    ret += circ(uv, vec2(0.987324, 0.146545), 0.0288391);

    ret += circ(uv, vec2(0.222646, 0.251694), 0.00092276);

    ret += circ(uv, vec2(0.159826, 0.528063), 0.00605293);

	return max(ret, 0.0);

}



vec3 water(vec2 uv, vec3 cdir, float iTime)

{

    uv *= vec2(0.25);



    // Parallax height distortion with two directional waves at

    // slightly different angles.

    vec2 a = 0.025 * cdir.xz / cdir.y; // Parallax offset

    float h = sin(uv.x + iTime); // Height at UV

    uv += a * h;

    h = sin(0.841471 * uv.x - 0.540302 * uv.y + iTime);

    uv += a * h;

    

    // Texture distortion

    float d1 = mod(uv.x + uv.y, TWOPI);

    float d2 = mod((uv.x + uv.y + 0.25) * 1.3, SIXPI);

    d1 = iTime * 0.07 + d1;

    d2 = iTime * 0.5 + d2;

    vec2 dist = vec2(

    	sin(d1) * 0.15 + sin(d2) * 0.05,

    	cos(d1) * 0.15 + cos(d2) * 0.05

    );

    

    vec3 ret = mix(WATER_COL.rgb, WATER2_COL.rgb, waterlayer(uv + dist.xy));

    ret = mix(ret, FOAM_COL.rgb, waterlayer(vec2(1.0) - uv - dist.yx));

    return ret;

}



void fragment() {

	vec2 uv = UV;

   COLOR.rgb = vec3(water(uv * tile, vec3(0,1,0), TIME * distortion_speed));

}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/WATER_COL = Color( 0.04, 0.38, 0.88, 1 )
shader_param/WATER2_COL = Color( 0.04, 0.35, 0.78, 1 )
shader_param/FOAM_COL = Color( 0.8125, 0.9609, 0.9648, 1 )
shader_param/distortion_speed = 2.0
shader_param/tile = Vector2( 5, 5 )
shader_param/wave_speed = 1.5

[node name="maze" type="Node2D"]
script = ExtResource( 17 )

[node name="Cameramapcuoi" type="Camera2D" parent="."]
position = Vector2( 0, -1 )
current = true
script = ExtResource( 6 )

[node name="Spawn_locations" type="Node" parent="."]

[node name="1" type="Position2D" parent="Spawn_locations"]
position = Vector2( 1089, 1045 )

[node name="2" type="Position2D" parent="Spawn_locations"]
position = Vector2( 1150, 1049 )

[node name="3" type="Position2D" parent="Spawn_locations"]
position = Vector2( 1213, 1051 )

[node name="4" type="Position2D" parent="Spawn_locations"]
position = Vector2( 1092, 1009 )

[node name="5" type="Position2D" parent="Spawn_locations"]
position = Vector2( 1140, 1009 )

[node name="6" type="Position2D" parent="Spawn_locations"]
position = Vector2( 1207, 1006 )

[node name="Game_UI2" type="CanvasLayer" parent="."]
script = ExtResource( 7 )

[node name="winnermusic" type="AudioStreamPlayer" parent="Game_UI2"]
stream = ExtResource( 5 )

[node name="Control" type="Control" parent="Game_UI2"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Winner" type="Label" parent="Game_UI2/Control"]
material = SubResource( 11 )
anchor_top = 0.478
anchor_right = 1.0
anchor_bottom = 0.719
margin_top = 0.0399933
margin_bottom = -63.08
custom_fonts/font = SubResource( 1 )
text = "Winner Winner Pacman Dinner !!!
"
align = 1
valign = 1
script = ExtResource( 8 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Win_timer" type="Timer" parent="Game_UI2/Control/Winner"]
wait_time = 10.0

[node name="Sprite" type="Sprite" parent="Game_UI2/Control/Winner"]
material = SubResource( 4 )
position = Vector2( 321, 6.00001 )
scale = Vector2( 10.125, 5.125 )
z_index = -1
texture = ExtResource( 4 )

[node name="CanvasModulate" type="CanvasModulate" parent="."]
position = Vector2( 4, -4 )
scale = Vector2( 2.36626, 1.27397 )
color = Color( 0.0509804, 0.0117647, 0.0117647, 1 )

[node name="ngoc3" type="Area2D" parent="." groups=["ngoc3"]]
position = Vector2( -1150, -939 )

[node name="Sprite" type="Sprite" parent="ngoc3"]
texture = ExtResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="ngoc3"]
position = Vector2( -2, 1 )
shape = SubResource( 2 )

[node name="pacmanquaivat" type="Node2D" parent="."]

[node name="pacmaninja" parent="pacmanquaivat" instance=ExtResource( 10 )]
position = Vector2( 309, 500 )

[node name="pacmaninja2" parent="pacmanquaivat" instance=ExtResource( 10 )]
position = Vector2( -592, 266 )

[node name="pacmaninja4" parent="pacmanquaivat" instance=ExtResource( 10 )]
position = Vector2( -357, 794 )

[node name="pacmaninja5" parent="pacmanquaivat" instance=ExtResource( 10 )]
position = Vector2( -447, 503 )

[node name="pacmanangle" parent="pacmanquaivat" instance=ExtResource( 12 )]
position = Vector2( 935, 505 )

[node name="pacmanangle2" parent="pacmanquaivat" instance=ExtResource( 12 )]
position = Vector2( 410, 309 )

[node name="pacmanangle3" parent="pacmanquaivat" instance=ExtResource( 12 )]
position = Vector2( -835, 791 )

[node name="pacmanangle4" parent="pacmanquaivat" instance=ExtResource( 12 )]
position = Vector2( 936, -77 )

[node name="pacmanangle5" parent="pacmanquaivat" instance=ExtResource( 12 )]
position = Vector2( -311, 168 )

[node name="pacmanchoang" parent="pacmanquaivat" instance=ExtResource( 13 )]
position = Vector2( 567, -168 )

[node name="pacmanchoang2" parent="pacmanquaivat" instance=ExtResource( 13 )]
position = Vector2( -216, 164 )

[node name="pacmanchoang3" parent="pacmanquaivat" instance=ExtResource( 13 )]
position = Vector2( 320, -710 )

[node name="pacmanchoang4" parent="pacmanquaivat" instance=ExtResource( 13 )]
position = Vector2( -839, 63 )

[node name="pacmaninja3" parent="pacmanquaivat" instance=ExtResource( 10 )]
position = Vector2( 559, 795 )

[node name="pacmaninja6" parent="pacmanquaivat" instance=ExtResource( 10 )]
position = Vector2( 318, -601 )

[node name="rock" parent="pacmanquaivat" instance=ExtResource( 11 )]
position = Vector2( -985, -840 )

[node name="dinhbayy" type="Node2D" parent="."]

[node name="dinhbay" parent="dinhbayy" instance=ExtResource( 15 )]
position = Vector2( -655, -440 )

[node name="dinhbay2" parent="dinhbayy" instance=ExtResource( 15 )]
position = Vector2( 587, 292 )

[node name="dinhbay3" parent="dinhbayy" instance=ExtResource( 15 )]
position = Vector2( 447, -213 )

[node name="dinhbay4" parent="dinhbayy" instance=ExtResource( 15 )]
position = Vector2( -416, 324 )

[node name="dinhbay5" parent="dinhbayy" instance=ExtResource( 15 )]
position = Vector2( -653, -206 )

[node name="dinhbay7" parent="dinhbayy" instance=ExtResource( 15 )]
position = Vector2( -1037, -298 )

[node name="dinhbay8" parent="dinhbayy" instance=ExtResource( 15 )]
position = Vector2( -1046, 91 )

[node name="dinhbay9" parent="dinhbayy" instance=ExtResource( 15 )]
position = Vector2( -649, 616 )

[node name="dinhbay10" parent="dinhbayy" instance=ExtResource( 15 )]
position = Vector2( -798, 328 )

[node name="thembomb" parent="dinhbayy" instance=ExtResource( 14 )]
position = Vector2( 794, 500 )

[node name="thembomb2" parent="dinhbayy" instance=ExtResource( 14 )]
position = Vector2( 555, 165 )

[node name="thembomb3" parent="dinhbayy" instance=ExtResource( 14 )]
position = Vector2( 548, -411 )

[node name="thembomb4" parent="dinhbayy" instance=ExtResource( 14 )]
position = Vector2( -554, -403 )

[node name="UI" type="CanvasLayer" parent="."]
script = ExtResource( 9 )

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource( 6 )
cell_size = Vector2( 48, 48 )
format = 1
tile_data = PoolIntArray( -1179669, 0, 0, -1179668, 0, 0, -1179667, 0, 0, -1179666, 0, 0, -1179665, 0, 0, -1179664, 0, 0, -1179663, 0, 0, -1179662, 0, 0, -1179661, 0, 0, -1179660, 0, 0, -1179659, 0, 0, -1179658, 0, 0, -1179657, 0, 0, -1179656, 0, 0, -1179655, 0, 0, -1179654, 0, 0, -1179653, 0, 0, -1179652, 0, 0, -1179651, 0, 0, -1179650, 0, 0, -1179649, 0, 0, -1245184, 0, 0, -1245183, 0, 0, -1245182, 0, 0, -1245181, 0, 0, -1245180, 0, 0, -1245179, 0, 0, -1245178, 0, 0, -1245177, 0, 0, -1245176, 0, 0, -1245175, 0, 0, -1245174, 0, 0, -1245173, 0, 0, -1245172, 0, 0, -1245171, 0, 0, -1245170, 0, 0, -1245169, 0, 0, -1245168, 0, 0, -1245167, 0, 0, -1245166, 0, 0, -1245165, 0, 0, -1245164, 0, 0, -1114113, 0, 0, -1179641, 0, 0, -1179630, 0, 0, -1179628, 0, 0, -1048597, 0, 0, -1048595, 0, 0, -1048594, 0, 0, -1048593, 0, 0, -1048592, 0, 0, -1048591, 0, 0, -1048590, 0, 0, -1048589, 0, 0, -1048588, 0, 0, -1048587, 0, 0, -1048586, 0, 0, -1048585, 0, 0, -1048584, 0, 0, -1048583, 0, 0, -1048582, 0, 0, -1048581, 0, 0, -1048580, 0, 0, -1048579, 0, 0, -1048577, 0, 0, -1114110, 0, 0, -1114109, 0, 0, -1114108, 0, 0, -1114107, 0, 0, -1114105, 0, 0, -1114104, 0, 0, -1114103, 0, 0, -1114102, 0, 0, -1114101, 0, 0, -1114100, 0, 0, -1114094, 0, 0, -1114092, 0, 0, -983061, 0, 0, -983056, 0, 0, -983051, 0, 0, -983046, 0, 0, -983041, 0, 0, -1048571, 0, 0, -1048561, 0, 0, -1048556, 0, 0, -917525, 0, 0, -917520, 0, 0, -917515, 0, 0, -917510, 0, 0, -917505, 0, 0, -983035, 0, 0, -983025, 0, 0, -983020, 0, 0, -851989, 0, 0, -851988, 0, 0, -851987, 0, 0, -851984, 0, 0, -851982, 0, 0, -851981, 0, 0, -851980, 0, 0, -851979, 0, 0, -851977, 0, 0, -851974, 0, 0, -851971, 0, 0, -851970, 0, 0, -851969, 0, 0, -917502, 0, 0, -917499, 0, 0, -917498, 0, 0, -917497, 0, 0, -917496, 0, 0, -917495, 0, 0, -917494, 0, 0, -917493, 0, 0, -917492, 0, 0, -917491, 0, 0, -917490, 0, 0, -917489, 0, 0, -917488, 0, 0, -917487, 0, 0, -917486, 0, 0, -917484, 0, 0, -786453, 0, 0, -786448, 0, 0, -786441, 0, 0, -786435, 0, 0, -851966, 0, 0, -851963, 0, 0, -851948, 0, 0, -720917, 0, 0, -720915, 0, 0, -720914, 0, 0, -720913, 0, 0, -720912, 0, 0, -720910, 0, 0, -720909, 0, 0, -720908, 0, 0, -720907, 0, 0, -720906, 0, 0, -720905, 0, 0, -720904, 0, 0, -720903, 0, 0, -720902, 0, 0, -720901, 0, 0, -720900, 0, 0, -720899, 0, 0, -786432, 0, 0, -786431, 0, 0, -786430, 0, 0, -786427, 0, 0, -786426, 0, 0, -786425, 0, 0, -786424, 0, 0, -786423, 0, 0, -786422, 0, 0, -786420, 0, 0, -786419, 0, 0, -786418, 0, 0, -786417, 0, 0, -786416, 0, 0, -786415, 0, 0, -786414, 0, 0, -786413, 0, 0, -786412, 0, 0, -655381, 0, 0, -655379, 0, 0, -655363, 0, 0, -720894, 0, 0, -720886, 0, 0, -720878, 0, 0, -720876, 0, 0, -589845, 0, 0, -589843, 0, 0, -589842, 0, 0, -589841, 0, 0, -589840, 0, 0, -589839, 0, 0, -589838, 0, 0, -589837, 0, 0, -589835, 0, 0, -589834, 0, 0, -589833, 0, 0, -589832, 0, 0, -589831, 0, 0, -589830, 0, 0, -589827, 0, 0, -589826, 0, 0, -589825, 0, 0, -655360, 0, 0, -655359, 0, 0, -655358, 0, 0, -655357, 0, 0, -655356, 0, 0, -655355, 0, 0, -655354, 0, 0, -655353, 0, 0, -655350, 0, 0, -655349, 0, 0, -655348, 0, 0, -655347, 0, 0, -655346, 0, 0, -655345, 0, 0, -655342, 0, 0, -655340, 0, 0, -524309, 0, 0, -524301, 0, 0, -524299, 0, 0, -524294, 0, 0, -589822, 0, 0, -589817, 0, 0, -589814, 0, 0, -589809, 0, 0, -589806, 0, 0, -589804, 0, 0, -458773, 0, 0, -458768, 0, 0, -458765, 0, 0, -458764, 0, 0, -458763, 0, 0, -458758, 0, 0, -524286, 0, 0, -524283, 0, 0, -524281, 0, 0, -524278, 0, 0, -524273, 0, 0, -524268, 0, 0, -393237, 0, 0, -393235, 0, 0, -393234, 0, 0, -393233, 0, 0, -393232, 0, 0, -393229, 0, 0, -393224, 0, 0, -393222, 0, 0, -393221, 0, 0, -393220, 0, 0, -393219, 0, 0, -393218, 0, 0, -393217, 0, 0, -458752, 0, 0, -458747, 0, 0, -458742, 0, 0, -458737, 0, 0, -458736, 0, 0, -458735, 0, 0, -458734, 0, 0, -458732, 0, 0, -327701, 0, 0, -327699, 0, 0, -327693, 0, 0, -327688, 0, 0, -327683, 0, 0, -393211, 0, 0, -393207, 0, 0, -393206, 0, 0, -393198, 0, 0, -393196, 0, 0, -262165, 0, 0, -262163, 0, 0, -262160, 0, 0, -262159, 0, 0, -262158, 0, 0, -262157, 0, 0, -262155, 0, 0, -262154, 0, 0, -262153, 0, 0, -262152, 0, 0, -262151, 0, 0, -262150, 0, 0, -262147, 0, 0, -262145, 0, 0, -327680, 0, 0, -327679, 0, 0, -327678, 0, 0, -327677, 0, 0, -327676, 0, 0, -327675, 0, 0, -327674, 0, 0, -327673, 0, 0, -327672, 0, 0, -327671, 0, 0, -327670, 0, 0, -327668, 0, 0, -327667, 0, 0, -327666, 0, 0, -327665, 0, 0, -327664, 0, 0, -327663, 0, 0, -327662, 0, 0, -327660, 0, 0, -196629, 0, 0, -196627, 0, 0, -196616, 0, 0, -196614, 0, 0, -196611, 0, 0, -196609, 0, 0, -262134, 0, 0, -262126, 0, 0, -262124, 0, 0, -131093, 0, 0, -131092, 0, 0, -131091, 0, 0, -131090, 0, 0, -131089, 0, 0, -131088, 0, 0, -131086, 0, 0, -131085, 0, 0, -131084, 0, 0, -131083, 0, 0, -131082, 0, 0, -131081, 0, 0, -131080, 0, 0, -131078, 0, 0, -131075, 0, 0, -131074, 0, 0, -131073, 0, 0, -196606, 0, 0, -196605, 0, 0, -196604, 0, 0, -196603, 0, 0, -196602, 0, 0, -196601, 0, 0, -196598, 0, 0, -196597, 0, 0, -196596, 0, 0, -196595, 0, 0, -196593, 0, 0, -196590, 0, 0, -196588, 0, 0, -65557, 0, 0, -65552, 0, 0, -65550, 0, 0, -65544, 0, 0, -65542, 0, 0, -131065, 0, 0, -131059, 0, 0, -131057, 0, 0, -131052, 0, 0, -21, 0, 0, -19, 0, 0, -16, 0, 0, -15, 0, 0, -14, 0, 0, -11, 0, 0, -8, 0, 0, -6, 0, 0, -3, 0, 0, -2, 0, 0, -1, 0, 0, -65536, 0, 0, -65535, 0, 0, -65534, 0, 0, -65533, 0, 0, -65532, 0, 0, -65531, 0, 0, -65529, 0, 0, -65528, 0, 0, -65527, 0, 0, -65526, 0, 0, -65523, 0, 0, -65521, 0, 0, -65516, 0, 0, 65515, 0, 0, 65517, 0, 0, 65525, 0, 0, 65528, 0, 0, 65530, 0, 0, 0, 0, 0, 4, 0, 0, 5, 0, 0, 7, 0, 0, 13, 0, 0, 15, 0, 0, 16, 0, 0, 17, 0, 0, 18, 0, 0, 19, 0, 0, 20, 0, 0, 131051, 0, 0, 131053, 0, 0, 131061, 0, 0, 131064, 0, 0, 131066, 0, 0, 131071, 0, 0, 65536, 0, 0, 65541, 0, 0, 65543, 0, 0, 65549, 0, 0, 65551, 0, 0, 65556, 0, 0, 196587, 0, 0, 196589, 0, 0, 196590, 0, 0, 196591, 0, 0, 196592, 0, 0, 196593, 0, 0, 196594, 0, 0, 196595, 0, 0, 196596, 0, 0, 196597, 0, 0, 196600, 0, 0, 196602, 0, 0, 196605, 0, 0, 196606, 0, 0, 196607, 0, 0, 131074, 0, 0, 131077, 0, 0, 131078, 0, 0, 131079, 0, 0, 131082, 0, 0, 131083, 0, 0, 131084, 0, 0, 131085, 0, 0, 131087, 0, 0, 131090, 0, 0, 131092, 0, 0, 262123, 0, 0, 262128, 0, 0, 262133, 0, 0, 262138, 0, 0, 262141, 0, 0, 196610, 0, 0, 196615, 0, 0, 196621, 0, 0, 196626, 0, 0, 196628, 0, 0, 327659, 0, 0, 327660, 0, 0, 327661, 0, 0, 327664, 0, 0, 327665, 0, 0, 327666, 0, 0, 327669, 0, 0, 327670, 0, 0, 327671, 0, 0, 327672, 0, 0, 327673, 0, 0, 327674, 0, 0, 327675, 0, 0, 327676, 0, 0, 327677, 0, 0, 262144, 0, 0, 262145, 0, 0, 262146, 0, 0, 262147, 0, 0, 262148, 0, 0, 262149, 0, 0, 262151, 0, 0, 262154, 0, 0, 262157, 0, 0, 262158, 0, 0, 262159, 0, 0, 262160, 0, 0, 262161, 0, 0, 262162, 0, 0, 262164, 0, 0, 393195, 0, 0, 393197, 0, 0, 393202, 0, 0, 327680, 0, 0, 327685, 0, 0, 327687, 0, 0, 327690, 0, 0, 327693, 0, 0, 327698, 0, 0, 327700, 0, 0, 458731, 0, 0, 458733, 0, 0, 458734, 0, 0, 458735, 0, 0, 458736, 0, 0, 458738, 0, 0, 458739, 0, 0, 458740, 0, 0, 458741, 0, 0, 458742, 0, 0, 458743, 0, 0, 458744, 0, 0, 458747, 0, 0, 458748, 0, 0, 458749, 0, 0, 458750, 0, 0, 458751, 0, 0, 393216, 0, 0, 393218, 0, 0, 393221, 0, 0, 393223, 0, 0, 393226, 0, 0, 393229, 0, 0, 393231, 0, 0, 393234, 0, 0, 393236, 0, 0, 524267, 0, 0, 524280, 0, 0, 458754, 0, 0, 458757, 0, 0, 458759, 0, 0, 458760, 0, 0, 458761, 0, 0, 458762, 0, 0, 458765, 0, 0, 458767, 0, 0, 458772, 0, 0, 589803, 0, 0, 589805, 0, 0, 589808, 0, 0, 589816, 0, 0, 524290, 0, 0, 524293, 0, 0, 524301, 0, 0, 524303, 0, 0, 524308, 0, 0, 655339, 0, 0, 655341, 0, 0, 655344, 0, 0, 655345, 0, 0, 655346, 0, 0, 655347, 0, 0, 655348, 0, 0, 655349, 0, 0, 655352, 0, 0, 655353, 0, 0, 655354, 0, 0, 655355, 0, 0, 655356, 0, 0, 655357, 0, 0, 589824, 0, 0, 589825, 0, 0, 589826, 0, 0, 589829, 0, 0, 589830, 0, 0, 589831, 0, 0, 589832, 0, 0, 589833, 0, 0, 589834, 0, 0, 589835, 0, 0, 589836, 0, 0, 589837, 0, 0, 589839, 0, 0, 589840, 0, 0, 589841, 0, 0, 589842, 0, 0, 589843, 0, 0, 589844, 0, 0, 589845, 0, 0, 589846, 0, 0, 589847, 0, 0, 589848, 0, 0, 589849, 0, 0, 589850, 0, 0, 589851, 0, 0, 589852, 0, 0, 589853, 0, 0, 589854, 0, 0, 589855, 0, 0, 720875, 0, 0, 720877, 0, 0, 720885, 0, 0, 720893, 0, 0, 655360, 0, 0, 655365, 0, 0, 655373, 0, 0, 655375, 0, 0, 655380, 0, 0, 655381, 0, 0, 655382, 0, 0, 655383, 0, 0, 655384, 0, 0, 655385, 0, 0, 655386, 0, 0, 655387, 0, 0, 655388, 0, 0, 655389, 0, 0, 655390, 0, 0, 655391, 0, 0, 786411, 0, 0, 786413, 0, 0, 786416, 0, 0, 786417, 0, 0, 786418, 0, 0, 786421, 0, 0, 786422, 0, 0, 786423, 0, 0, 786424, 0, 0, 786425, 0, 0, 786426, 0, 0, 786429, 0, 0, 786430, 0, 0, 786431, 0, 0, 720896, 0, 0, 720898, 0, 0, 720899, 0, 0, 720900, 0, 0, 720901, 0, 0, 720904, 0, 0, 720905, 0, 0, 720906, 0, 0, 720908, 0, 0, 720909, 0, 0, 720911, 0, 0, 720912, 0, 0, 720913, 0, 0, 720914, 0, 0, 720916, 0, 0, 720926, 0, 0, 720927, 0, 0, 851947, 0, 0, 851949, 0, 0, 851952, 0, 0, 851954, 0, 0, 851955, 0, 0, 851965, 0, 0, 786434, 0, 0, 786437, 0, 0, 786440, 0, 0, 786442, 0, 0, 786445, 0, 0, 786447, 0, 0, 786452, 0, 0, 786462, 0, 0, 786463, 0, 0, 917483, 0, 0, 917485, 0, 0, 917488, 0, 0, 917490, 0, 0, 917493, 0, 0, 917494, 0, 0, 917495, 0, 0, 917496, 0, 0, 917497, 0, 0, 917498, 0, 0, 917501, 0, 0, 917503, 0, 0, 851968, 0, 0, 851969, 0, 0, 851970, 0, 0, 851973, 0, 0, 851976, 0, 0, 851978, 0, 0, 851979, 0, 0, 851981, 0, 0, 851983, 0, 0, 851986, 0, 0, 851988, 0, 0, 851998, 0, 0, 851999, 0, 0, 983019, 0, 0, 983021, 0, 0, 983024, 0, 0, 983029, 0, 0, 983034, 0, 0, 917504, 0, 0, 917509, 0, 0, 917514, 0, 0, 917517, 0, 0, 917519, 0, 0, 917522, 0, 0, 917524, 0, 0, 917534, 0, 0, 917535, 0, 0, 1048555, 0, 0, 1048557, 0, 0, 1048560, 0, 0, 1048561, 0, 0, 1048562, 0, 0, 1048563, 0, 0, 1048564, 0, 0, 1048565, 0, 0, 1048567, 0, 0, 1048568, 0, 0, 1048570, 0, 0, 1048571, 0, 0, 1048572, 0, 0, 1048573, 0, 0, 1048574, 0, 0, 1048575, 0, 0, 983040, 0, 0, 983042, 0, 0, 983043, 0, 0, 983044, 0, 0, 983045, 0, 0, 983046, 0, 0, 983047, 0, 0, 983050, 0, 0, 983052, 0, 0, 983053, 0, 0, 983055, 0, 0, 983058, 0, 0, 983060, 0, 0, 983070, 0, 0, 983071, 0, 0, 1114091, 0, 0, 1114093, 0, 0, 1114103, 0, 0, 1048586, 0, 0, 1048594, 0, 0, 1048606, 0, 0, 1048607, 0, 0, 1179627, 0, 0, 1179628, 0, 0, 1179629, 0, 0, 1179630, 0, 0, 1179631, 0, 0, 1179632, 0, 0, 1179633, 0, 0, 1179634, 0, 0, 1179635, 0, 0, 1179636, 0, 0, 1179637, 0, 0, 1179638, 0, 0, 1179639, 0, 0, 1179640, 0, 0, 1179641, 0, 0, 1179642, 0, 0, 1179643, 0, 0, 1179644, 0, 0, 1179645, 0, 0, 1179646, 0, 0, 1179647, 0, 0, 1114112, 0, 0, 1114113, 0, 0, 1114114, 0, 0, 1114115, 0, 0, 1114116, 0, 0, 1114117, 0, 0, 1114118, 0, 0, 1114119, 0, 0, 1114120, 0, 0, 1114121, 0, 0, 1114122, 0, 0, 1114123, 0, 0, 1114124, 0, 0, 1114125, 0, 0, 1114126, 0, 0, 1114127, 0, 0, 1114128, 0, 0, 1114129, 0, 0, 1114130, 0, 0, 1114131, 0, 0, 1114132, 0, 0, 1114142, 0, 0, 1114143, 0, 0, 1179650, 0, 0, 1179651, 0, 0, 1179660, 0, 0, 1179661, 0, 0, 1179678, 0, 0, 1179679, 0, 0, 1245186, 0, 0, 1245187, 0, 0, 1245190, 0, 0, 1245191, 0, 0, 1245192, 0, 0, 1245193, 0, 0, 1245196, 0, 0, 1245197, 0, 0, 1245214, 0, 0, 1245215, 0, 0, 1310722, 0, 0, 1310723, 0, 0, 1310725, 0, 0, 1310726, 0, 0, 1310729, 0, 0, 1310732, 0, 0, 1310733, 0, 0, 1310750, 0, 0, 1310751, 0, 0, 1376258, 0, 0, 1376259, 0, 0, 1376262, 0, 0, 1376263, 0, 0, 1376265, 0, 0, 1376266, 0, 0, 1376268, 0, 0, 1376269, 0, 0, 1376286, 0, 0, 1376287, 0, 0, 1441794, 0, 0, 1441795, 0, 0, 1441796, 0, 0, 1441798, 0, 0, 1441801, 0, 0, 1441804, 0, 0, 1441805, 0, 0, 1441822, 0, 0, 1441823, 0, 0, 1507330, 0, 0, 1507331, 0, 0, 1507334, 0, 0, 1507337, 0, 0, 1507338, 0, 0, 1507340, 0, 0, 1507341, 0, 0, 1507358, 0, 0, 1507359, 0, 0, 1572866, 0, 0, 1572867, 0, 0, 1572869, 0, 0, 1572870, 0, 0, 1572873, 0, 0, 1572876, 0, 0, 1572894, 0, 0, 1572895, 0, 0, 1638402, 0, 0, 1638403, 0, 0, 1638406, 0, 0, 1638409, 0, 0, 1638410, 0, 0, 1638411, 0, 0, 1638412, 0, 0, 1638430, 0, 0, 1638431, 0, 0, 1703938, 0, 0, 1703939, 0, 0, 1703945, 0, 0, 1703948, 0, 0, 1703966, 0, 0, 1703967, 0, 0, 1769474, 0, 0, 1769475, 0, 0, 1769479, 0, 0, 1769502, 0, 0, 1769503, 0, 0, 1835010, 0, 0, 1835011, 0, 0, 1835012, 0, 0, 1835013, 0, 0, 1835014, 0, 0, 1835015, 0, 0, 1835016, 0, 0, 1835017, 0, 0, 1835018, 0, 0, 1835019, 0, 0, 1835020, 0, 0, 1835021, 0, 0, 1835038, 0, 0, 1835039, 0, 0, 1900546, 0, 0, 1900547, 0, 0, 1900548, 0, 0, 1900549, 0, 0, 1900550, 0, 0, 1900551, 0, 0, 1900552, 0, 0, 1900553, 0, 0, 1900554, 0, 0, 1900555, 0, 0, 1900556, 0, 0, 1900557, 0, 0, 1900574, 0, 0, 1900575, 0, 0, 1966092, 0, 0, 1966093, 0, 0, 1966110, 0, 0, 1966111, 0, 0, 2031628, 0, 0, 2031629, 0, 0, 2031646, 0, 0, 2031647, 0, 0, 2097164, 0, 0, 2097165, 0, 0, 2097182, 0, 0, 2097183, 0, 0, 2162700, 0, 0, 2162701, 0, 0, 2162702, 0, 0, 2162703, 0, 0, 2162704, 0, 0, 2162705, 0, 0, 2162706, 0, 0, 2162707, 0, 0, 2162708, 0, 0, 2162709, 0, 0, 2162710, 0, 0, 2162711, 0, 0, 2162712, 0, 0, 2162713, 0, 0, 2162714, 0, 0, 2162715, 0, 0, 2162716, 0, 0, 2162717, 0, 0, 2162718, 0, 0, 2162719, 0, 0, 2228236, 0, 0, 2228237, 0, 0, 2228238, 0, 0, 2228239, 0, 0, 2228240, 0, 0, 2228241, 0, 0, 2228242, 0, 0, 2228243, 0, 0, 2228244, 0, 0, 2228245, 0, 0, 2228246, 0, 0, 2228247, 0, 0, 2228248, 0, 0, 2228249, 0, 0, 2228250, 0, 0, 2228251, 0, 0, 2228252, 0, 0, 2228253, 0, 0, 2228254, 0, 0, 2228255, 0, 0 )

[node name="Node2D" type="Node2D" parent="."]
z_index = -99

[node name="Sprite" type="Sprite" parent="Node2D"]
material = SubResource( 9 )
position = Vector2( 63, 120 )
scale = Vector2( 176.813, 182.625 )
texture = ExtResource( 2 )

[connection signal="timeout" from="Game_UI2/Control/Winner/Win_timer" to="Game_UI2/Control/Winner" method="_on_Win_timer_timeout"]
[connection signal="body_entered" from="ngoc3" to="Game_UI2" method="_on_ngoc3_body_entered"]
